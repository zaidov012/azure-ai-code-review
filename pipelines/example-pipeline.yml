# Example Azure Pipeline with AI Code Review
#
# This pipeline runs AI code review on pull requests

trigger: none  # Don't run on push

# Run on pull requests targeting main or develop
pr:
  branches:
    include:
      - main
      - develop
  paths:
    exclude:
      - docs/**
      - '*.md'

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Set these as secret variables in your pipeline
  - group: 'AI-Review-Secrets'  # Contains LLM_API_KEY, etc.

stages:
  - stage: Build
    displayName: 'Build and Test'
    jobs:
      - job: BuildJob
        displayName: 'Build Application'
        steps:
          - checkout: self
          
          - task: UsePythonVersion@0
            displayName: 'Use Python 3.10'
            inputs:
              versionSpec: '3.10'
          
          - script: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
            displayName: 'Install dependencies'
          
          - script: |
              python -m pytest tests/ --junitxml=test-results.xml
            displayName: 'Run tests'
            continueOnError: true
          
          - task: PublishTestResults@2
            displayName: 'Publish test results'
            inputs:
              testResultsFiles: 'test-results.xml'
              testRunTitle: 'Python Tests'

  - stage: AIReview
    displayName: 'AI Code Review'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: ReviewJob
        displayName: 'Review Pull Request with AI'
        steps:
          - checkout: self
            fetchDepth: 0
            persistCredentials: true
          
          - task: UsePythonVersion@0
            displayName: 'Use Python 3.10'
            inputs:
              versionSpec: '3.10'
          
          - task: AICodeReview@1
            displayName: 'AI Code Review'
            inputs:
              # LLM Configuration (from config file)
              configPath: 'config/config.yaml'
              
              # Or configure inline (overrides config file)
              llmProvider: 'openai'
              llmModel: 'gpt-5'  # Options: gpt-5, gpt-4-turbo, o1-preview, o1-mini
              llmApiKey: '$(LLM_API_KEY)'  # From secret variable
              llmTimeout: 60  # Reasoning models automatically use min 600s (10 min)
              # Note: GPT-5 and o1 models use extended timeout (10 min) automatically
              # For Azure OpenAI, set llmApiBase and llmApiVersion:
              # llmApiBase: '$(LLM_API_BASE)'
              # llmApiVersion: '2024-02-15-preview'
              
              # Review settings
              reviewScope: |
                security
                performance
                code_quality
                best_practices
                bugs
              
              fileExtensions: |
                .py
                .ts
                .js
                .tsx
                .jsx
              
              excludePatterns: |
                **/test_*.py
                **/*.test.ts
                **/*.spec.js
                **/node_modules/**
                **/dist/**
              
              quickMode: false
              postComments: true
              postSummary: true
              commentStyle: 'constructive'
              maxIssuesPerFile: 10
              logLevel: 'INFO'
            env:
              # Option 1: Use Build Service (requires PullRequestContribute permission)
              # See PERMISSION_SETUP.md for setup instructions
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)
              
              # Option 2: Use Personal Access Token (recommended if Build Service permissions cannot be granted)
              # Uncomment the line below and comment out SYSTEM_ACCESSTOKEN above
              # AZDO_PERSONAL_ACCESS_TOKEN: $(AZDO_PAT_TOKEN)  # Set this as a secret variable in your pipeline
              
              FAIL_ON_CRITICAL_ISSUES: 'false'
          
          - script: |
              echo "AI Review completed"
              echo "Issues found: $(AI_REVIEW_ISSUE_COUNT)"
              echo "Critical issues: $(AI_REVIEW_CRITICAL_COUNT)"
            displayName: 'Display review summary'
            condition: always()
